# For more information: https://laravel.com/docs/sail
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${HMR_PORT:-8080}:8080'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mariadb
            - redis
            - minio
            - meilisearch
            - mailpit
            - pgvector
    mariadb:
        image: 'mariadb:11'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './.mariadb/10-create-logs-database.sh:/docker-entrypoint-initdb.d/10-create-logs-database.sh'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'sail-minio:/data/minio'
        networks:
            - sail
        command: 'minio server /data/minio --console-address ":8900"'
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            retries: 3
            timeout: 5s
    thumbor:
        image: 'beeyev/thumbor-s3:7.1-slim-alpine'
        tty: true
        ports:
            - '${FORWARD_THUMBOR_PORT:-8888}:8888'
        volumes:
            - 'sail-thumbor:/data'
        networks:
            - sail
        environment:
            - LOG_LEVEL=info
            - LOADER=thumbor_aws.loader
            - AWS_LOADER_REGION_NAME=local
            - AWS_LOADER_BUCKET_NAME=kanka
            - AWS_LOADER_S3_ACCESS_KEY_ID=sail
            - AWS_LOADER_S3_SECRET_ACCESS_KEY=password
            - 'AWS_LOADER_S3_ENDPOINT_URL=http://minio:9000/'
            - RESULT_STORAGE=thumbor_aws.result_storage
            - AWS_RESULT_STORAGE_BUCKET_NAME=thumbnails
            - AWS_RESULT_STORAGE_S3_ACCESS_KEY_ID=sail
            - AWS_RESULT_STORAGE_S3_SECRET_ACCESS_KEY=password
            - 'AWS_RESULT_STORAGE_S3_ENDPOINT_URL=http://minio:9000/'
            - AWS_RESULT_STORAGE_ROOT_PATH=rs
            - RESULT_STORAGE_STORES_UNSAFE=True
            - ALLOW_UNSAFE_URL=True
            - RESULT_STORAGE_EXPIRATION_SECONDS=2629746
            - QUALITY=80
            - AUTO_WEBP=True
            - RESPECT_ORIENTATION=True
            - MAX_AGE=86400
            - HTTP_LOADER_VALIDATE_CERTS=False
        depends_on:
            - minio
    thumbor-nginx:
        image: 'nginx:1.23'
        tty: true
        volumes:
            - './.nginx:/etc/nginx/conf.d/'
        ports:
            - '8889:80'
        environment:
            - NGINX_PORT=8889
        networks:
            - sail
        depends_on:
            - thumbor
    mailpit:
        image: axllent/mailpit
        ports:
        - '8025:8025'  # Web UI
        - '${MAIL_PORT:-1025}:1025'  # SMTP server
        networks:
            - sail
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
            MEILI_MASTER_KEY: '${MEILISEARCH_KEY}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://127.0.0.1:7700/health"]
            retries: 3
            timeout: 5s
    pgvector:
        image: pgvector/pgvector:pg16
        restart: always
        environment:
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
        ports:
            - "${FORWARD_PGVECTOR_PORT:-5432}:5432"
        volumes:
            - sail-pgvector:/var/lib/postgresql/data
        networks:
            - sail
networks:
    sail:
        name: sail
        driver: bridge
volumes:
    sail-mariadb:
        driver: local
    sail-redis:
        driver: local
    sail-minio:
        driver: local
    sail-thumbor:
        driver: local
    sail-thumbor-nginx:
        driver: local
    sail-meilisearch:
        driver: local
    sail-pgvector:
        driver: local
