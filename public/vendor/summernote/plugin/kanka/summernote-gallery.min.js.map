{"version":3,"file":"summernote-gallery.min.js","mappings":"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","sources":["webpack://summernote-gallery/./src/Module/EventManager.ts","webpack://summernote-gallery/./src/Module/GalleryModal.ts","webpack://summernote-gallery/./src/Module/DataManager.ts","webpack://summernote-gallery/./src/Module/SummernoteGallery.ts","webpack://summernote-gallery/./src/index.ts","webpack://summernote-gallery/./src/Module/index.ts"],"sourcesContent":["export default class EventManager {\n    private events_queue: {};\n    constructor() {\n        // events store\n        this.events_queue = {};\n    }\n\n    // Register an event\n    on(event_name: string, closure: any) {\n        // @ts-ignore\n        if (! Array.isArray(this.events_queue[event_name]) ) {\n            // @ts-ignore\n            this.events_queue[event_name] = [];\n        }\n\n        // @ts-ignore\n        this.events_queue[event_name].push(closure);\n\n        return this;\n    }\n\n    // Fire an event\n    trigger(event_name: string, params: any = []) {\n        // @ts-ignore\n        const events = this.events_queue[event_name] || [];\n\n        for (let i = 0; i < events.length; i++) {\n            events[i].apply(this, params);\n        }\n\n        return this;\n    }\n\n    clearAll() {\n        this.events_queue = {};\n\n        return this;\n    }\n}","import EventManager from './EventManager'\n\nexport default class GalleryModal {\n    private $css: JQuery;\n    private readonly select_class: string;\n    private event: EventManager;\n    private template: string;\n    private readonly $modal: any;\n    private options: any;\n    private latestQuery: any;\n\n    constructor(options: any) {\n        this.options = $.extend({\n            // load more data on modal scroll\n            loadOnScroll: false,\n\n            // modal max height\n            maxHeight: 500,\n\n            // modal title\n            title: 'Campaign Gallery',\n\n            // close button text\n            close_text: 'Close',\n\n            // save button text\n            ok_text: 'Add',\n\n            // select all button text\n            selectAll_text: 'Select all',\n\n            // deselect all button text\n            deselectAll_text: 'Deselect all',\n\n            // message error to display when no image is selected\n            noImageSelected_msg: 'One image at least must be selected.'\n        }, options);\n\n        this.event = new EventManager();\n\n        this.template = this.getModalTemplate();\n        this.$modal = $(this.template).hide();\n\n        // class to add to image when selected\n        this.select_class = \"selected-img\";\n\n        this.addStyleToDom();\n        this.setOptions();\n\n        this.attachEvents();\n    }\n\n    setOptions() {\n        this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);\n        this.$modal.find('.modal-title').html(this.options.title);\n        this.$modal.find('#close').html(this.options.close_text);\n        this.$modal.find('#save').html(this.options.ok_text);\n        this.$modal.find('#select-all').html(this.options.selectAll_text);\n        this.$modal.find('#deselect-all').html(this.options.deselectAll_text);\n    }\n\n    // append images to the modal with data object\n    addImages(data: any, page: any) {\n\n        var $page_images = this.createImages(data, page);\n        var $images_list = this.$modal.find('.images-list');\n\n        if ($images_list.find('.img-item').length) {\n            this.$modal.find('.images-list').append($page_images);\n        } else {\n            this.$modal.find('.images-list').html($page_images);\n        }\n    }\n\n    // generate image elements from data object\n    createImages(data: any, page: any) {\n        var _this = this;\n        let content = []\n\n        for (var i = 0; i < data.length; i++) {\n\n            // If we're working with a folder, different stuff going on\n            if (data[i].folder) {\n                let $image = $('<div class=\"img-thumbnail grow flex flex-col justify-center items-center gap-2 p-2 cursor-pointer \" title=\"' + data[i].title + '\" data-url=\"' + data[i].url + '\"/>');\n                $image.html('<i class=\"' + data[i].icon + ' fa-2x\" aria-hidden=\"true\"></i><span class=\"text-center\">' + data[i].title + '</span>');\n\n                $image.on('click', function (event) {\n                    _this.loadFolder($(this).data('url'));\n                });\n\n                $item = $('<div class=\"w-32 h-32 rounded bg-base-200 img-item relative overflow-hidden shadow-sm hover:shadow-xl flex flex-stretch\">' + '</div>');\n                $item.prepend($image);\n                content.push($item);\n\n                continue;\n            }\n\n\n            let $div = $('<div class=\"relative w-32 h-32 flex items-end overflow-hidden bg-base-200 rounded shadow\"></div>');\n            let $image = $('<img class=\"img-thumbnail sng-image rounded object-cover w-full h-full block \" title=\"'+ data[i].title +'\" data-page=\"' + page + '\"/>');\n            $image.attr('src', data[i].thumb);\n            $image.data('gallery-id', data[i].id);\n            $image.data('full', data[i].src);\n\n            $image.get(0).onload = function() {\n                $(this).parent().siblings('.img-loading').hide()\n                $(this).on('click',function(event) {\n                    $(this).toggleClass(_this.select_class);\n                });\n            }\n\n            // Create the title overlay\n            let $titleOverlay = $('<div class=\"title-overlay absolute inset-x-0 bottom-0 bg-base-100 bg-opacity-60 px-2 py-1 text-xs text-center truncate text-base-content rounded m-1\">' + data[i].title + '</div>');\n\n            // Adding corresponding styles in addStyleToDom() { this.css =( ' ' + // Existing styles... '.image-title-overlay {' + ' position: absolute;' + ' bottom: 0;' + ' width: 100%;' + ' background: rgba(0, 0, 0, 0.5);' + ' color: white;' + ' text-align: center;' + ' padding: 5px;' + ' font-size: 0.9rem;' + ' overflow: hidden;' + ' text-overflow: ellipsis;' + ' white-space: nowrap;' + ' backdrop-filter: blur(5px); /* Blur effect applied */' + ' box-shadow: 0 -0.5px 10px rgba(0, 0, 0, 0.8);' + ' border-radius: 0 0 8px 8px;' + '}' + '.img-item {' + ' position: relative;' + ' overflow: `addStyleToDom`\n\n            let $checked = $('<i class=\"fa-solid fa-check absolute bottom-4 right-4 text-xl drop-shadow\" aria-hidden=\"true\"></i>');\n            // Optional: wrap the image and title together\n            $div.append($image).append($titleOverlay).append($checked);\n\n            var $item = $('<div class=\"rounded w-32 h-32 cursor-pointer img-item shadow-sm hover:shadow-md hover:bg-base-200 flex justify-center items-center relative overflow-none\">'\n                            +'<span class=\"img-loading\">'\n                                +'<i class=\"fa-solid fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            +'</span>'\n                        +'</div>');\n\n            $item.prepend($div);\n            content.push($item)\n        }\n\n        return content;\n    }\n\n    showError(message_text: any, permanent: any = false) {\n        var $message = this.$modal.find('.message');\n\n        $message.html('<span class=\"alert alert-danger\">' + message_text + '</span>');\n\n        if (!permanent) {\n            setTimeout(function () {\n                $message.html('');\n            }, 5000);\n        }\n    }\n\n    showLoading () {\n        this.$modal.find('.modal-footer .loading').show();\n    }\n\n    hideLoading () {\n        this.$modal.find('.modal-footer .loading').hide();\n    }\n\n    attachEvents() {\n        var _this = this;\n        var $modal = this.$modal;\n        var $modal_body = $modal.find('.modal-body');\n\n        $modal.find(\"button#save\").click(function(event: any) {\n            var $selected_img = $modal.find('.img-item img.' + _this.select_class);\n\n            if (! $selected_img.length) {\n                _this.showError(_this.options.noImageSelected_msg);\n                return;\n            }\n\n            $modal.modal('hide')\n\n            _this.event.trigger('beforeSave', [_this]);\n\n            $selected_img.each(function(index: any, el: any) {\n                _this.event.trigger('save', [_this, $(this)]);\n\n                $(this).removeClass(_this.select_class);\n            });\n\n            _this.event.trigger('afterSave', [this]);\n        });\n\n        // Bind the search field to load results dynamically\n        const debounceSearch = this.debounce(function(query: string) {\n            _this.dataManagerSearch(query);\n        }, 300); // Debounce to prevent frequent API calls\n\n\n        // Filter images on search\n        $modal.find(\"#search-field\").on('keyup', function() {\n            const query = $(this).val(); // Get the search query\n            debounceSearch(query); // Call the filter method\n        });\n\n\n        $modal.on('hidden.bs.modal', function () {\n            _this.event.trigger('close')\n        })\n\n        $modal.find(\"button#select-all\").click(function(event: any) {\n            $modal.find('img').addClass(_this.select_class);\n        });\n\n        $modal.find(\"button#deselect-all\").click(function(event: any) {\n            $modal.find('img').removeClass(_this.select_class);\n        });\n\n        $modal_body.scroll(function() {\n            var $images_list = $modal.find('.images-list');\n            var is_near_bottom = $modal_body.scrollTop() + $modal_body.height() >= $images_list.height() - 100;\n\n            let query = $modal.find(\"#search-field\").val();\n            if (is_near_bottom && (!query || query === \"\")) {\n                _this.event.trigger('scrollBottom', [_this]);\n            }\n        });\n    }\n\n    open() {\n        this.$modal.modal();\n    }\n\n    clearContent() {\n        // Reset the initial html\n        this.$modal.find('.images-list').html('');\n    }\n\n    // whether the images' container has enough content to show the vertical scroll\n    imagesContainerHasScroll() {\n        var $images_container = this.$modal.find('.modal-body');\n        var $images_list = $images_container.find('.images-list');\n\n        return parseInt($images_list.height()) > parseInt($images_container.height());\n    }\n\n    getModalTemplate() {\n\n        const bootsrap_version = parseInt(($ as any).fn.modal.Constructor.VERSION);\n        const header_content = [\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n            '<h4 class=\"modal-title\">[gallery title]</h4>',\n            '<input type=\"text\" id=\"search-field\" class=\"form-control mt-4\" placeholder=\"Search...\" />'\n\n        ];\n\n        const modal_html = ''+\n            '<div class=\"modal summernote-gallery fade\" tabindex=\"-1\" role=\"dialog\">'\n                + '<div class=\"modal-lg modal-dialog \">'\n                    + '<div class=\"modal-content\">'\n                        + '<div class=\"modal-header\">'\n                            + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join(''))\n                        + '</div>'\n                        + '<div class=\"modal-body\">'\n                            + '<div class=\"flex flex-wrap gap-5 images-list\">'\n                            + '</div>'\n                        + '</div>'\n                        + '<div class=\"modal-footer\">'\n                            + '<span style=\"display: none;position: absolute;left: 10px;bottom: 10px;\" class=\"loading\" >'\n                                + '<i class=\"fa-solid fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            + '</span >'\n                            + '<span style=\"display: inline-block; margin-right: 50px;\">'\n                                + '<button type=\"button\" id=\"deselect-all\" class=\"btn btn-default\">[Deselect-all]</button>'\n                                + '<button type=\"button\" id=\"select-all\" class=\"btn btn-default\">[select-all]</button>'\n                            + '</span >'\n                            + '<button type=\"button\" id=\"close\" class=\"btn btn-default\" data-dismiss=\"modal\">[Close]</button>'\n                            + '<button type=\"button\" id=\"save\" class=\"btn btn-primary\">[Add]</button>'\n                            + '<span class=\"message\" ></span >'\n                        + '</div>'\n                    + '</div>'\n                + '</div>'\n            + '</div>';\n\n        return modal_html;\n    }\n\n    addStyleToDom() {\n        this.$css = $('<style>'\n                        +'.img-item .fa-check{'\n                            +'color: hsl(var(--ac)/1);'\n                        +'}'\n                        +'.img-item .sng-image{'\n                            /*+'min-height : 119.66px;'*/\n                        +'}'\n                        +'.img-item .loading{'\n                            +'position: absolute;'\n                            +'margin: auto;'\n                            +'top: -20px;'\n                            +'bottom: 0;'\n                            +'display: block;'\n                            +'left: 0;'\n                            +'right: 0;'\n                            +'width: 60px;'\n                            +'height: 42px;'\n                            +'text-align: center;'\n                        +'}'\n                        +'.modal.summernote-gallery .message{'\n                            +'display: block;'\n                            +'padding: 30px 0 20px 0;'\n                        +'}'\n                        +'.modal.summernote-gallery .message:empty{'\n                            +'display: block;'\n                            +'padding: 0px!important;'\n                        +'}'\n                        +'.modal.summernote-gallery .modal-body{'\n                            +'overflow: scroll;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'display : none;'\n                        +'}'\n                        +'.img-item .'+ this.select_class +'+.fa-check{'\n                            +'display : block;'\n                            +'color: hsl(var(--a)/1);'\n                        +'}'\n                        +'.img-item .'+ this.select_class +'+.title-overlay {'\n                            +'background-color: hsl(var(--a)/1);'\n                            +'color: hsl(var(--ac)/1);'\n                        +'}'\n                        +'.'+ this.select_class +'{'\n                            +'background-color: hsl(var(--a)/1);'\n                            +'border: 1px solid hsl(var(--a)/1);'\n                        +'}'\n                    +'</style>');\n        this.$css.appendTo('body');\n    }\n\n    loadFolder(folder: any) {\n        //console.log('loading folder', folder);\n        var _this = this;\n\n        this.clearContent();\n        this.showLoading();\n\n        _this.event.trigger('loadFolder', [_this, folder]);\n    }\n\n    dataManagerSearch(query: string) {\n        var _this = this;\n        if (query == this.latestQuery) {\n            return;\n        }\n        this.latestQuery = query;\n        this.clearContent();\n        this.showLoading();\n        _this.event.trigger('search', [_this, query]);\n    }\n\n    debounce(func: Function, wait: number) {\n        let timeout: NodeJS.Timeout;\n        return function(...args: any[]) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => func.apply(this, args), wait);\n        };\n    }\n\n\n}","import EventManager from './EventManager'\nimport DataManagerOptionsInterface from \"./Interfaces/DataManagerOptionsInterface\";\n\nexport default class DataManager {\n    private fetch_type?: string;\n    private options: DataManagerOptionsInterface;\n    private current_page: number;\n    private is_fetching_locked: boolean;\n    private event: EventManager;\n    private fetch_url: string;\n    private filtering: boolean;\n\n    constructor(options: DataManagerOptionsInterface) {\n        this.options = {\n            ...{\n                // full http url for fetching data\n                url: null,\n\n                // array of objects with 'src' and 'title' keys\n                data: [],\n\n                // the key name that holds the data array\n                responseDataKey: 'data',\n\n                // the key name that holds the next page link\n                nextPageKey: 'links.next',\n\n                filtering: false,\n            }, ...options\n        }\n\n        this.init();\n    }\n\n    init() {\n        this.current_page = 0;\n        this.is_fetching_locked = false;\n        this.event = new EventManager();\n        this.fetch_url = this.options.url;\n        this.fetch_type = this.options.data.length ? 'data' : (this.fetch_url ? 'url' : null);\n    }\n\n    // stop data fetching if neither next page link nor data were found\n    setNextFetch(response: any) {\n        if (response.next_link && response.data.length) {\n            this.fetch_url = response.next_link;\n        } else {\n            this.lockFetching();\n        }\n    }\n\n    lockFetching() {\n        this.is_fetching_locked = true;\n    }\n\n    unlockFetching() {\n        this.is_fetching_locked = false;\n    }\n\n    // get a key from object with dot notation, example: data.key.subkey.\n    getObjectKeyByString(object: any, dotted_key: string, default_val?: any) {\n        const value = dotted_key.split('.').reduce(function (item: any, i: any) {\n            return item ? item[i] : {};\n        }, object);\n\n        if (typeof default_val == 'undefined') {\n            default_val = value;\n        }\n\n        return value && !$.isEmptyObject(value) ? value : default_val;\n    }\n\n    parseResponse(response: any) {\n\n        return {\n            data: this.getObjectKeyByString(response, this.options.responseDataKey, []),\n            next_link: this.getObjectKeyByString(response, this.options.nextPageKey, null)\n        };\n    }\n\n    fetchData() {\n        const _this = this;\n\n        if (this.filtering) {\n            return;\n        }\n\n        if (this.fetch_type == 'data') {\n\n            this.event.trigger('beforeFetch');\n            this.event.trigger('fetch', [_this.options.data]);\n            this.event.trigger('afterFetch');\n\n        } else if (this.fetch_type == 'url') {\n\n            // Prevent simultaneous requests.\n            // Because we need to get the next page link from each request,\n            // they must be synchronous.\n            if (this.is_fetching_locked) return;\n\n            const current_link = _this.fetch_url;\n\n            this.event.trigger('beforeFetch');\n\n            this.lockFetching();\n\n            $.ajax({\n                url: current_link,\n                beforeSend:function(xhr: any){\n                    // set the request link to get it afterwards in the response\n                    xhr.request_link = current_link;\n                },\n            })\n            .always(function () {\n                // this is the first callback to be called when the request finises\n                _this.unlockFetching();\n            })\n            .done(function(response, status_text, xhr: any){\n                const parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n\n        } else {\n            _this.event.trigger('error', [\"options 'data' or 'url' must be set\"]);\n        }\n    }\n\n    fetchNext() {\n        if (this.fetch_type == 'url') {\n            this.fetchData();\n        }\n    }\n\n    fetchFolder(folder: any) {\n        var _this = this;\n\n        // Prevent simultaneous requests.\n        // Because we need to get the next page link from each request,\n        // they must be synchronous.\n        //if (this.is_fetching_locked) return;\n\n        //console.log('getting images from folder url', folder);\n        var current_link = folder;\n\n        this.event.trigger('beforeFetch');\n\n        this.lockFetching();\n\n        $.ajax({\n            url: current_link,\n            beforeSend:function(xhr: any){\n                // set the request link to get it afterwards in the response\n                xhr.request_link = current_link;\n            },\n        })\n            .always(function () {\n                // this is the first callback to be called when the request finishs\n                _this.unlockFetching();\n            })\n            .done(function(response: any, status_text: any, xhr: any){\n\n                var parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n    }\n\n    search(query: any) {\n        var _this = this;\n\n        if (!query || query === \"\" ) {\n            this.filtering = false;\n            this.current_page = 0;\n            this.fetch_url = this.options.url;\n            this.fetchData();\n            return;\n        }\n        this.filtering = true;\n\n        this.event.trigger('beforeFetch');\n\n        const current_link = this.options.url + '?name=' + query;\n\n        this.lockFetching();\n\n        $.ajax({\n            url: current_link,\n            beforeSend:function(xhr: any){\n                // set the request link to get it afterwards in the response\n                xhr.request_link = current_link;\n            },\n        })\n            .always(function () {\n                // this is the first callback to be called when the request finishs\n                _this.unlockFetching();\n            })\n            .done(function(response: any, status_text: any, xhr: any){\n\n                var parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n    }\n\n}\n","import GalleryModal from './GalleryModal'\nimport DataManager from './DataManager'\n\nexport default class SummernoteGallery {\n    private options: any;\n    private plugin_default_options: {};\n    private editor: any;\n    private editable: any;\n    private context: any;\n    private plugin_options: any;\n    private modal: any;\n    private data_manager: any;\n    constructor(options: any) {\n        this.options = $.extend({\n            name: 'summernoteGallery',\n            buttonLabel: '<i class=\"fa-solid fa-file-image\"></i>',\n            tooltip: 'summernoteGallery'\n        }, options);\n\n        this.plugin_default_options = {}\n    }\n\n    // set the focus to the last focused element in the editor\n    recoverEditorFocus() {\n        var last_focused_el = $(this.editor).data('last_focused_element');\n        if(typeof last_focused_el !== \"undefined\") {\n            var editor = this.editable;\n            var range = document.createRange();\n            var sel = window.getSelection();\n            var cursor_position =  last_focused_el.length;\n\n            range.setStart(last_focused_el, cursor_position);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            editor.focus();\n        }\n    }\n\n    saveLastFocusedElement() {\n        var focused_element: any = window.getSelection().focusNode;\n        var parent = $(this.editable).get(0);\n        if ($.contains(parent, focused_element)) {\n            $(this.editor).data('last_focused_element', focused_element)\n        }\n    }\n\n    attachEditorEvents() {\n        var _this = this;\n\n        $(this.editable).on('keypress, mousemove', function() {\n            _this.saveLastFocusedElement();\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .delete', function () {\n            // delete brick\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .edit', function () {\n            let $brick = $(this).parents('summernote-gallery-brick');\n            let data = $brick.data('brick'); // json\n\n            _this.modal.open(data);\n        })\n    }\n\n    initGallery(context: any) {\n        this.context = context;\n        this.editor = this.context.layoutInfo.note;\n        this.editable = this.context.layoutInfo.editable;\n        this.plugin_options = $.extend(\n            this.plugin_default_options,\n            this.context.options[this.options.name] || {}\n        )\n\n        this.modal = new GalleryModal(this.plugin_options.modal);\n        this.data_manager = new DataManager(this.plugin_options.source);\n\n        this.attachModalEvents();\n        this.attachEditorEvents();\n    }\n\n    attachModalEvents() {\n        var _this = this;\n\n        this.modal.event.on('beforeSave', function (gallery_modal: any) {\n            _this.recoverEditorFocus();\n        });\n\n        this.modal.event.on('save', function (gallery_modal: any, $image: any) {\n            // add selected images to summernote editor\n            _this.context.invoke(\n                'editor.pasteHTML',\n                '<img src=\"' + $image.data('full') + '\" alt=\"' + ($image.attr('alt') || \"\") + '\" data-gallery-id=\"' + ($image.data('gallery-id') || \"\") + '\" />'\n            );\n        });\n\n        this.modal.event.on('scrollBottom', function (gallery_modal: any) {\n            if (_this.modal.options.loadOnScroll) {\n                _this.data_manager.fetchNext();\n            }\n        });\n        this.modal.event.on('loadFolder', function (random: any, folder: any) {\n            _this.data_manager.fetchFolder(folder);\n        });\n\n        this.modal.event.on('close', function (gallery_modal: any) {\n            _this.data_manager.init();\n            _this.modal.clearContent();\n        });\n\n        this.modal.event.on('search', function (gallery_modal: any, query: string) {\n            _this.data_manager.search(query);\n        });\n    }\n\n    createButton() {\n        var _this = this;\n\n        var button = ($ as any).summernote.ui.button({\n            className: 'w-100',\n            contents: this.options.buttonLabel,\n            tooltip: this.options.tooltip,\n            click: function() {\n                _this.openGallery();\n            }\n        });\n\n        // create jQuery object from button instance.\n        return button.render();\n    }\n\n    attachDataEvents() {\n        var _this = this;\n\n        this.data_manager.event\n        .on('beforeFetch', function () {\n            _this.modal.showLoading();\n        })\n        .on('fetch', function (data: any, page: any, link: any) {\n            _this.modal.addImages(data, page);\n\n            setTimeout(function () {\n                if (_this.modal.options.loadOnScroll && !_this.modal.imagesContainerHasScroll()) {\n                    // The loadOnScroll won't work if the images' container doesn't have the scroll displayed,\n                    // so we need to keep loading the images until the scroll shows.\n                    _this.data_manager.fetchNext();\n                }\n            }, 2000)\n        })\n        .on('afterFetch', function () {\n            _this.modal.hideLoading();\n        })\n        .on('error', function (error: any) {\n            _this.modal.showError(error, true);\n        });\n    }\n\n    openGallery() {\n        this.attachDataEvents();\n        this.data_manager.fetchData();\n        this.modal.open();\n    }\n}","import GalleryPlugin from './Module'\n\nvar gallery_plugin = new GalleryPlugin({});\n\n// add the plugin to summernote\n$.extend(($ as any).summernote.plugins, gallery_plugin.getPlugin());","import SummernoteGallery from './SummernoteGallery'\n\nexport default class GalleryPlugin {\n    protected summernote_gallery: any\n    constructor(options: any) {\n        this.summernote_gallery = new SummernoteGallery(options);\n    }\n\n    getPlugin() {\n        let plugin = {};\n        let _this = this;\n        let options = this.summernote_gallery.options\n\n        // @ts-ignore\n        plugin[options.name] = function(context) {\n\n            let sgOptions = context.options[options.name] || {}\n            let buttonLabel = sgOptions.buttonLabel || _this.summernote_gallery.options.buttonLabel\n\n            _this.summernote_gallery.options.buttonLabel = buttonLabel\n            let tooltip = sgOptions.tooltip || _this.summernote_gallery.options.tooltip\n\n            _this.summernote_gallery.options.tooltip = tooltip\n\n\n            // add gallery button\n            context.memo('button.' + options.name, _this.createButton());\n\n            this.events = {\n                'summernote.keyup': function(we: any, e: any)\n                {\n                    _this.summernote_gallery.saveLastFocusedElement();\n                }\n            };\n\n            this.initialize = function() {\n                _this.summernote_gallery.initGallery(context);\n            };\n        }\n\n        return plugin;\n    }\n\n    createButton() {\n        return this.summernote_gallery.createButton();\n    }\n}"],"names":["this","events_queue","on","event_name","closure","Array","isArray","push","trigger","params","events","i","length","apply","clearAll","options","$","extend","loadOnScroll","maxHeight","title","close_text","ok_text","selectAll_text","deselectAll_text","noImageSelected_msg","event","template","getModalTemplate","$modal","hide","select_class","addStyleToDom","setOptions","attachEvents","find","css","html","addImages","data","page","$page_images","createImages","append","_this","content","folder","url","icon","loadFolder","$item","prepend","$div","$image","attr","thumb","id","src","get","onload","parent","siblings","toggleClass","$titleOverlay","$checked","showError","message_text","permanent","$message","setTimeout","showLoading","show","hideLoading","$modal_body","click","$selected_img","modal","each","index","el","removeClass","debounceSearch","debounce","query","dataManagerSearch","val","addClass","scroll","$images_list","is_near_bottom","scrollTop","height","open","clearContent","imagesContainerHasScroll","$images_container","parseInt","header_content","fn","Constructor","VERSION","join","reverse","$css","appendTo","latestQuery","func","wait","timeout","clearTimeout","args","responseDataKey","nextPageKey","filtering","init","current_page","is_fetching_locked","fetch_url","fetch_type","setNextFetch","response","next_link","lockFetching","unlockFetching","getObjectKeyByString","object","dotted_key","default_val","value","split","reduce","item","isEmptyObject","parseResponse","fetchData","ajax","beforeSend","xhr","request_link","always","done","status_text","parsed_response","fail","fetchNext","fetchFolder","current_link","search","name","buttonLabel","tooltip","plugin_default_options","recoverEditorFocus","last_focused_el","editor","editable","range","document","createRange","sel","window","getSelection","cursor_position","setStart","collapse","removeAllRanges","addRange","focus","saveLastFocusedElement","focused_element","focusNode","contains","attachEditorEvents","parents","initGallery","context","layoutInfo","note","plugin_options","data_manager","source","attachModalEvents","gallery_modal","invoke","random","createButton","summernote","ui","button","className","contents","openGallery","render","attachDataEvents","link","error","gallery_plugin","summernote_gallery","getPlugin","plugin","sgOptions","memo","we","e","initialize","plugins"],"sourceRoot":""}